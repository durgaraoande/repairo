spring:
  profiles:
    active: dev
  data:
    mongodb:
      uri: mongodb://localhost:27017/repairshop
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

server:
  port: 8080

# App-specific configuration
app:
  encryption:
    key: ${ENCRYPTION_KEY:defaultDevKey1234567890}
  security:
    admin:
      username: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin}
      enabled: true
  websocket:
    enabled: true
    allowed-origins: "*" # CHANGE IN PROD to your domains e.g. https://admin.example.com,https://app.example.com
    heartbeat:
      inbound-ms: 10000
      outbound-ms: 10000
  rate-limit:
    enabled: true
    policies:
      check-messages:
        capacity: 60        # 60 requests
        diff-capacity: 120  # allow more frequent small diff polls
        periodMs: 60000     # per minute
        perIp: true
        paths:
          - /admin/check-new-messages
      send-message:
        capacity: 120
        periodMs: 60000
        perIp: true
        paths:
          - /admin/send-message
      update-status:
        capacity: 90
        periodMs: 60000
        perIp: true
        paths:
          - /admin/update-status
  features:
    websockets: true
    diff-polling-default-enabled: true
    strict-json: false
    audit-status: true
  polling:
    messages:
      interval-ms: 4000
      max-interval-ms: 30000
    dashboard:
      interval-ms: 10000

    # Alternative: load users from database
    # users:
    #   source: database # or properties
    #   table: users # if database source

# WhatsApp Configuration
whatsapp:
  access:
    token: ${WHATSAPP_ACCESS_TOKEN:}
  phone:
    number:
      id: ${WHATSAPP_PHONE_NUMBER_ID:}
  api:
    url: https://graph.facebook.com
    version: ${WHATSAPP_API_VERSION:v23.0}
  webhook:
    verify:
      token: ${WHATSAPP_WEBHOOK_VERIFY_TOKEN}
  test:
    mode: ${WHATSAPP_TEST_MODE:true}

# Logging
logging:
  level:
    "org.springframework.security": INFO
    "com.repairo": DEBUG
    root: INFO

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  data:
    mongodb:
      uri: mongodb://localhost:27017/repairshop_dev
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/resources
    livereload:
      enabled: true
      port: 35729
  thymeleaf:
    cache: false

server:
  port: 8080
  ssl:
    enabled: false

logging:
  level:
    "org.springframework.security": DEBUG
    "com.repairo": DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/repairshop_prod}
  thymeleaf:
    cache: true

server:
  port: 8443
  ssl:
    enabled: true
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-store-type: PKCS12

logging:
  level:
    "org.springframework.security": WARN
    "com.repairo": INFO
    root: WARN
